plugins {
    id 'multiloader-loader'
    id 'fabric-loom' version '1.7-SNAPSHOT'
}

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name = 'TerraformersMC'
                url = 'https://maven.terraformersmc.com/'
            }
        }
        filter {
            includeGroup("com.terraformersmc")
            includeGroup("dev.emi")
        }
    }
    exclusiveContent {
        forRepository {
            maven {
                name = 'Ladysnake Mods'
                url = 'https://maven.ladysnake.org/releases'
            }
        }
        filter {
            includeGroup("org.ladysnake.cardinal-components-api")
        }
    }
    maven { url = "https://maven.wispforest.io/releases" }
    maven { url 'https://maven.su5ed.dev/releases' }
    maven { url 'https://maven.fabricmc.net' }
    maven { url 'https://maven.shedaniel.me/' }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modImplementation "com.mrcrayfish:framework-fabric:${minecraft_version}-${framework_version}"
    modImplementation ("io.wispforest:accessories-fabric:${accessories_version}") {
        exclude group: "net.fabricmc"
    }
    modCompileOnlyApi "com.terraformersmc:modmenu:${modmenu_version}"
    modRuntimeOnly "com.mrcrayfish:catalogue-fabric:${minecraft_version}-${catalogue_version}"
}

sourceSets.main.resources.srcDirs += "src/generated/resources"

fabricApi {
    configureDataGeneration()
}

loom {
    def aw = file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("runs/client")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("runs/server")
        }
    }
}

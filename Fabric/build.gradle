plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id 'maven-publish'
    id 'idea'
}

archivesBaseName = "${mod_id}-fabric"
version = "${minecraft_version}-${mod_version}"

sourceSets {
    main {
        resources {
            srcDirs += [
                'src/generated/resources'
            ]
        }
    }
}

repositories {
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        name = "Ladysnake Libs"
        url = "https://ladysnake.jfrog.io/artifactory/mods"
    }
}

configurations {
    implementation.extendsFrom library
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modCompileOnlyApi("com.terraformersmc:modmenu:4.1.2") {
        exclude group: "net.fabricmc", module: "fabric-loader"
        exclude group: "net.fabricmc.fabric-api", module: "fabric-api"
    }
    modCompileOnly("dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.0.0-beta.1") {
        exclude group: "net.fabricmc", module: "fabric-loader"
        exclude group: "net.fabricmc.fabric-api", module: "fabric-api"
    }
    modCompileOnly("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.0.0-beta.1") {
        exclude group: "net.fabricmc", module: "fabric-loader"
        exclude group: "net.fabricmc.fabric-api", module: "fabric-api"
    }
    modCompileOnly("dev.emi:trinkets:${trinkets_version}") {
        exclude group: "net.fabricmc", module: "fabric-loader"
        exclude group: "net.fabricmc.fabric-api", module: "fabric-api"
    }

    modImplementation "com.mrcrayfish:framework-fabric:${minecraft_version}-${framework_version}"
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation project(":Common")
}

loom {
    accessWidenerPath = file("src/main/resources/backpacked.accesswidener")
    mixin {
        defaultRefmapName = "${mod_id}-refmap.json"
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
        datagenClient {
            inherit client
            setConfigName("Fabric Data")
            ideConfigGenerated(true)
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"
            vmArg "-Dfabric-api.datagen.modid=${mod_id}"
            runDir "build/datagen"
        }
    }
}

processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand project.properties
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version

            artifact remapJar
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }

            pom.withXml {
                def depsNode = asNode().appendNode('dependencies')
                [this.configurations.library].each {
                    it.allDependencies.each {
                        def depNode = depsNode.appendNode('dependency')
                        depNode.appendNode('groupId', it.group)
                        depNode.appendNode('artifactId', it.name)
                        depNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("LOCAL_MAVEN")
        }
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/MrCrayfish/Maven"
            credentials {
                username = rootProject.githubCredentials['GITHUB_USERNAME']
                password = rootProject.githubCredentials['GITHUB_TOKEN']
            }
        }
    }
}

loom.disableDeprecatedPomGeneration(publishing.publications.mavenJava)

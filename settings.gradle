pluginManagement {
    repositories {
        gradlePluginPortal()
        mavenCentral()
        exclusiveContent {
            forRepository {
                maven {
                    name = 'Fabric'
                    url = "https://maven.fabricmc.net"
                }
            }
            filter {
                includeGroup("net.fabricmc")
                includeGroup("fabric-loom")
            }
        }
        exclusiveContent {
            forRepository {
                maven {
                    name = 'NeoForge'
                    url = "https://maven.neoforged.net/releases"
                }
            }
            filter {
                includeGroupAndSubgroups("net.neoforged")
                includeGroup("codechicken")
            }
        }
        exclusiveContent {
            forRepository {
                maven {
                    name = 'Sponge Snapshots'
                    url = "https://repo.spongepowered.org/repository/maven-public"
                }
            }
            filter {
                includeGroupAndSubgroups("org.spongepowered")
                includeGroupAndSubgroups("net.minecraftforge")
            }
        }
    }
}

plugins {
    id 'org.gradle.toolchains.foojay-resolver-convention' version '0.8.0'
}

def includeModloader(String name) {
    // If building with Github Actions, only include loader we want!
    String targetLoader = Boolean.getBoolean("CI") ?: System.getenv("TARGET_LOADER")
    if(targetLoader == null || targetLoader == name) {
        include(name)
    }
}

rootProject.name = 'Backpacked'
include("common")
//includeModloader("forge")
includeModloader("fabric")
includeModloader("neoforge")
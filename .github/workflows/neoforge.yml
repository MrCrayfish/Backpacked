name: Build and Sign Mod (NeoForge)
on:
  push:
    paths:
      - 'release_build_neoforge'
jobs:
  build:
    runs-on: ubuntu-latest
    environment: Build
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v3
      - name: Read mod data from gradle.properties
        id: mod_data
        uses: christian-draeger/read-properties@1.1.1
        with:
          path: './gradle.properties'
          properties: 'mod_id mod_version minecraft_version'
      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: gradle-minecraft-${{ steps.mod_data.outputs.minecraft_version }}-neoforge
      - name: Load Keystore
        id: load_keystore
        env:
          JKS: ${{ secrets.MRCRAYFISH_JKS }}
        if: ${{ env.JKS != '' }}
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'keystore.jks'
          encodedString: ${{ env.JKS }}
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Build and Publish
        env:
          TARGET_LOADER: "neoforge"
          GPR_USER: "MrCrayfish"
          GPR_KEY: ${{ secrets.GPR_TOKEN }}
          SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
          SIGNING_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          KEYSTORE: ${{ steps.load_keystore.outputs.filePath }}
          KEYSTORE_ALIAS: ${{ secrets.MRCRAYFISH_JKS_ALIAS }}
          KEYSTORE_PASS: ${{ secrets.MRCRAYFISH_JKS_PASSPHRASE }}
        run: ./gradlew :neoforge:build :neoforge:publish
      - name: Stop Gradle
        run: ./gradlew --stop
      - name: Construct artifact files
        id: artifacts
        run: |
          echo "neoforge=neoforge/build/libs/${{ steps.mod_data.outputs.mod_id }}-neoforge-${{ steps.mod_data.outputs.minecraft_version }}-${{ steps.mod_data.outputs.mod_version }}-signed.jar" >> "$GITHUB_OUTPUT"
      - name: Import GPG
        env:
          SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
          SIGNING_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        if: ${{ env.SIGNING_KEY != '' && env.SIGNING_PASSPHRASE != '' }}
        uses: crazy-max/ghaction-import-gpg@v6.1.0
        with:
          gpg_private_key: ${{ env.SIGNING_KEY }}
          passphrase: ${{ env.SIGNING_PASSPHRASE }}
      - name: Sign JAR
        env:
          SIGNING_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        if: ${{ env.SIGNING_PASSPHRASE != '' }}
        run: |
          gpg --batch --yes --passphrase "${{ env.SIGNING_PASSPHRASE }}" --armor --detach-sign ${{ steps.artifacts.outputs.neoforge }}
      - name: Upload NeoForge Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: '${{ steps.mod_data.outputs.mod_id }}-neoforge-${{ steps.mod_data.outputs.minecraft_version }}-${{ steps.mod_data.outputs.mod_version }}'
          path: |
            ${{ steps.artifacts.outputs.neoforge }}
            ${{ steps.artifacts.outputs.neoforge }}.asc